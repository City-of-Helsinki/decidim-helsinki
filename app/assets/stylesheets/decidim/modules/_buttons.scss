/* Foundation button overrides */

.button{
  font-weight: $button-font-weight;
  border: $button-border; // not needed in more recent versions of Foundation

  &.small{
    padding-top: .5rem;
    padding-bottom: .5rem;

    &.compact{
      padding-left: .5rem;
      padding-right: .5rem;
      letter-spacing: 0;
    }
  }

  &.tiny{
    padding-top: .25rem;
    padding-bottom: .25rem;

    &.compact{
      padding-left: .25rem;
      padding-right: .25rem;
      letter-spacing: 0;
    }
  }

  &.secondary{
    &:hover,
    &:focus{
      color: $white;
    }
  }
}

.bg-primary{
  .button{
    &.secondary{
      background-color: $secondary;
      color: $primary;

      &:hover,
      &:focus{
        background-color: darken($secondary, 15%);
        color: $primary;
      }

      &.hollow{
        border-color: $secondary;
        background-color: transparent;
        color: $secondary;

        &:hover,
        &:focus{
          background-color: darken($secondary, 15%);
          color: $primary;
        }
      }
    }
  }
}

.wrapper-ruuti{
  .button,
  a.button{
    &,
    &.primary{
      background-color: $ruuti-primary;
      color: $white;

      &:hover,
      &:focus{
        background-color: scale-color($ruuti-primary, $lightness: -50%);
      }
    }

    &.secondary{
      background-color: $ruuti-secondary;
      color: $white;

      &:hover,
      &:focus{
        background-color: scale-color($ruuti-secondary, $lightness: 20%);
        color: $white;
      }

      &.hollow{
        border-color: $ruuti-secondary;
        color: $ruuti-secondary;

        &:hover,
        &:focus{
          background-color: darken($ruuti-secondary, 15%);
          color: $white;
        }
      }
    }

    &.clear{
      background-color: transparent;
    }
  }
}

.button.hollow{
  &:hover,
  &:focus{
    &.primary{
      $button-primary: map-get($button-palette, primary);
      $primary-hover: scale-color($button-primary, $lightness: $button-background-hover-lightness);
      $primary-color: color-pick-contrast($primary-hover, ($button-color, $button-color-alt));
      // $primary-color: $secondary;

      color: $primary-color;
      background: $primary-hover;
      border-color: $primary-hover;
    }

    &.secondary{
      $button-secondary: map-get($button-palette, primary);
      $secondary-hover: scale-color($button-secondary, $lightness: $button-background-hover-lightness);
      $secondary-color: color-pick-contrast($secondary-hover, ($button-color, $button-color-alt));

      color: $secondary-color;
      background: $secondary-hover;
      border-color: $secondary-hover;
    }
  }
}

.wrapper-ruuti{
  .button.hollow{
    &,
    &.primary{
      background-color: transparent;
      border-color: $ruuti-primary;
      color: $ruuti-primary;
    }

    &.secondary{
      background-color: transparent;
      border-color: $ruuti-secondary;
      color: $ruuti-secondary;
    }

    &:hover,
    &:focus{
      $ruuti-primary-hover: $ruuti-primary;
      $ruuti-primary-color: $white;

      &,
      &.primary{
        color: $ruuti-primary-color;
        background: $ruuti-primary-hover;
        border-color: $ruuti-primary-hover;
      }

      &.secondary{
        $ruuti-secondary-hover: $ruuti-secondary;
        $ruuti-secondary-color: $white;

        color: $ruuti-secondary-color;
        background: $ruuti-secondary-hover;
        border-color: $ruuti-secondary-hover;
      }
    }
  }
}

// Overwrite Foundation hover styles in hollow disabled buttons
.button.hollow:disabled:hover,
.button.hollow.disabled:hover{
  background-color: transparent;
  border-color: inherit;
  color: map-get($button-palette, primary);

  &.secondary{
    color: map-get($button-palette, secondary);
  }

  &.success{
    color: map-get($button-palette, success);
  }

  &.alert{
    color: map-get($button-palette, alert);
  }

  &.warning{
    color: map-get($button-palette, warning);
  }
}

.button.light:not(.hollow){
  @include modifiers(color, (success: $white, secondary: $white));
}

// Button groups
.button-group--collapse{
  text-align: left;
  margin-bottom: 0;
  display: flex;

  > :last-child{
    flex: 1;
  }

  .button{
    margin-right: 0;
  }

  > :first-child,
  > :first-child *{
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  > :last-child,
  > :last-child *{
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  > :not(:first-child):not(:last-child),
  > :not(:first-child):not(:last-child) *{
    border-radius: 0;
  }
}

// buttons layout
.buttons__row{
  @include flexgap(.5rem);
}

.buttons__column{
  @include flexgap(.5rem, column);
}

/* Extra buttons styles */

.button--shadow{
  $shadows:(
    primary: shade(map-get($button-palette, primary), 50),
    secondary: shade(map-get($button-palette, secondary), 50),
    success: shade(map-get($button-palette, success), 50),
    warning: shade(map-get($button-palette, warning), 50),
    alert: shade(map-get($button-palette, alert), 50),
    muted: shade($muted, 50)
  );

  @include modifiers(background-color, $shadows){
    color: $white;
  }
}

.button--icon{
  display: flex;
  align-items: center;

  .icon{
    margin: 0 2px;
  }

  &.small{
    .icon{
      width: 12px;
      height: 12px;
    }
  }
}

.button--nomargin{
  margin: 0;
}

.button--frosted{
  background-color: rgba($white, .65);
  color: $primary;
}

.button--muted{
  background-color: $muted;

  &:hover{
    background-color: map-get($button-palette, secondary);
  }

  &.hollow{
    border-color: $muted;
  }
}

.button--sc{
  //text-transform: uppercase;
  letter-spacing: .05em;
  font-weight: 600;

  &.large{
    font-size: 1rem;
  }
}

.button__info{
  text-transform: none;
  font-weight: normal;
  font-size: 80%;
  margin-top: .25rem;
  display: block;
}

.link{
  color: $anchor-color;
  font-weight: 600;
}

.link--no-color{
  color: inherit;
}

.muted-link{
  font-weight: 600;
  color: $muted;

  &:hover{
    color: $anchor-color;
  }
}

.show-more{
  text-align: center;
  margin-bottom: $margin-s;
}

/* Social buttons */

.button--social{
  padding: 0 1.5rem 0 0;
  text-align: center;
  display: block;
  min-width: 250px;

  &.button--tunnistamo{
    .icon{
      width: 90px;
      height: 40px;
    }
  }
}

.button--social__icon{
  display: inline-block;
  vertical-align: middle;
  padding: .85em 1rem;
  //border-right: 1px solid rgba(black, .075);
  margin-right: .5rem;
  min-width: 3rem;
  text-align: center;
}

.button--twitter{
  background-color: $twitter;

  &:hover{
    background-color: lighten($twitter, 5);
  }
}

.button--facebook{
  background-color: $facebook;

  &:hover{
    background-color: lighten($facebook, 5);
  }
}

.button--google{
  background-color: $google;

  &:hover{
    background-color: lighten($google, 5);
  }
}
