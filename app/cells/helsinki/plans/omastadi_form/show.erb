<div class="row columns">
  <div class="lead">
    <p><%= t(".required_fields_text") %></p>
  </div>
</div>

<% if false && (current_user.nil? || allowed_to?(:request_access, :plan, plan: plan)) %>
  <div class="row">
    <div class="columns">
      <div class="callout secondary"><%= t(".info_message").html_safe %></div>
    </div>
  </div>
<% end %>

<%= render :steps_nav %>

<%= render :prev_next %>

<div class="tabs-content" id="plan-tabs-content">
  <div class="tabs-panel is-active" id="step-ideas">
    <%= render :ideas_step %>

    <%= render :prev_next %>
  </div>
  <div class="tabs-panel" id="step-edit">
    <%= user_group_field %>

    <%= contents_edit %>

    <%= render :prev_next %>

    <%= render :buttons %>
  </div>
</div>

<%
js_options = {
  messages: {
    charactersMin: t(".characters_min"),
    charactersUsed: t(".characters_used")
  }
}
%>
<script>
$(function() {
  DecidimPlansCharacters.configure(<%== js_options.to_json %>);
  $(".field.with-character-counter").each(function(_i, el) {
    var $wrapper = $(el);
    var $input = $("input, textarea", $wrapper);
    var $info = $(".field-character-counter-info", $wrapper);
    DecidimPlansCharacters.bindCharacterCounter($input, $info);
  });

  var $tabs = $("#plan-tabs");
  var $tabsContent = $("#plan-tabs-content");
  var $prevnext = $(".plan-prevnext");

  var activateTab = function($tab) {
    // Set the selected tab active
    $(".tabs-panel", $tabsContent).removeClass("is-active");
    $tab.addClass("is-active");

    // Update the tabs state
    var $selector = $("[data-tabs-target='#" + $tab.attr("id") + "']", $tabs);
    $("> li", $tabs).removeClass("is-active");
    $selector.parent().addClass("is-active");

    // Update prev/next state
    $(".prevnext-nav-link", $prevnext).removeClass("disabled");
    if ($tab.prev().length < 1) {
      $(".prevnext-nav-link[data-direction='prev']", $prevnext).addClass("disabled");
    }
    if ($tab.next().length < 1) {
      $(".prevnext-nav-link[data-direction='next']", $prevnext).addClass("disabled");
    }

    // Trigger change to initiate the scroll position change and map display
    $tabs.trigger("change.tabs");
  };

  $(".prevnext-nav-link", $prevnext).on("click", function(ev) {
    ev.preventDefault();

    var $link = $(this);
    if ($link.is(".disabled")) {
      return;
    }

    var $activePanel = $(".tabs-panel.is-active", $tabsContent);
    var $target = null;
    if ($link.data("direction") === "prev") {
      $target = $activePanel.prev();
    } else {
      $target = $activePanel.next();
    }
    activateTab($target);
  });

  $tabs.on("change.tabs", () => {
    var $activePanel = $(".tabs-panel.is-active", $tabsContent);
    $("html, body").animate({ scrollTop: $tabs.offset().top }, 0);
    $("[data-decidim-map]", $activePanel).each(function (i, el) {
      var $map = $(el);
      var map = $map.data("map");
      if (!map) {
        return;
      }

      // See:
      // https://leafletjs.com/reference-1.3.4.html#map-invalidatesize
      map.invalidateSize(false);
    });
  });
});
</script>
